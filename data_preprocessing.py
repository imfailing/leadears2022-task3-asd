# -*- coding: utf-8 -*-
"""
Created on Sat Oct 28 02:33:49 2022
@author: Юрий
"""

import pandas as pd
from sklearn import preprocessing
from tqdm import tqdm, tqdm_notebook

tqdm().pandas()

data = pd.read_csv(filepath_or_buffer='Full_16_09_22.csv', sep='$', skiprows=[6603579])


data.drop_duplicates(keep='first', inplace=True)


#Добавление diff_time, разница между заведением заявки и закрытием в минутах
data['diff_time'] = (pd.to_datetime(data['Дата закрытия'])-pd.to_datetime(data['Дата создания заявки в формате Timezone']))
data['diff_time'] = data['diff_time'].progress_apply(lambda x : x.seconds/60)


#Справочники для правил
status=['Закрыта', 'Закрыта через МАРМ']
def_type=['Ввод в эксплуатацию ИПУ воды (замена, демонтаж, пропуск межповерочного интервала)', 'Подача документов о поверке ИПУ воды в электронном виде']
pril2=[2303, 2245, 1903, 2396, 1922, 1771, 2096, 7907, 7906]
pril4=[1853,2259,1677,2517,40150,40153,1705,2011,2333,40138,2171,1688,1696,2098,39271,1695,2184,3963,
2233,2244,38008,38009,2222,2162,1939,2196,2053,13161,1649,38562,38567,1614,38581,38583,
2387,38585,38578,2392,1604,2423,2425,2421,1618,1664,18442,2207,1630,1622,1701,38216,
38217,1665,2220,2159,1620,40141,1610,2158,2282,2213,2253,4075,2262,2221,2263,40144,
37735,2082,39017,39015,2177,2170,38554,40135,1985,1698,1974,1694,1683,2246,38577,2150,2175]
xl = pd.ExcelFile('data/pril3.xlsx')
pril3 = xl.parse('Лист1')
pril3 = pril3[pril3['hour']!='-'].reset_index(drop=True)


#Правило1
data['сriterion_1'] = data['Корневой ИД заявки'].isin(data[(data['Наименование статуса заявки'].isin(status))& (data['Наименование дефекта'].isin(def_type))& 
    (data['Результативность']!='Выполнено')& (data['Вид выполненных работ']!='Аварийное/плановое отключение')&
    (data['Идентификатор дефекта'].isin(pril3['Идентификатор дефекта'].unique()))]['Корневой ИД заявки'])
#Правило2
data['сriterion_2'] = data['Корневой ИД заявки'].isin(data[(data['Наименование статуса заявки'].isin(status))& (data['Наименование дефекта'].isin(def_type))& 
    (data['Результативность']=='Выполнено')& (data['diff_time']>10)& (data['Кол-во возвратов на доработку'].isna())&
    (data['Идентификатор дефекта'].isin(pril3['Идентификатор дефекта'].unique()))]['Корневой ИД заявки'])
#Правило3 добавить группировки и окно
#data[(data['Наименование статуса заявки'].isin(status))& (data['Результативность']=='Выполнено')& 
 #   (data['diff_time']<10)& (data['Кол-во возвратов на доработку'].isna())& 
  #  (data['Идентификатор дефекта'].isin(pril3['Идентификатор дефекта'].unique()))&  
   #  (~data['Идентификатор дефекта'].isin(pril2))][['Корневой ИД заявки', 'Идентификатор дефекта', 'Адрес проблемы', 'Дата создания заявки в формате Timezone', 'Дата закрытия']].sort_values(by=['Адрес проблемы', 'Идентификатор дефекта', 'Дата закрытия'])
#Правило4
data['сriterion_4']=data['Корневой ИД заявки'].isin(data[(data['diff_time']<10)& (data['Наименование статуса заявки'].isin(status))& 
     (data['Результативность']=='Выполнено')& (data['Кол-во возвратов на доработку'].isna())&
     (~data['Идентификатор дефекта'].isin(pril2))
    ]['Корневой ИД заявки'])
#Правило5
data['сriterion_5']=data['Корневой ИД заявки'].isin(data[(data['Наименование статуса заявки'].isin(status))&(data['Кол-во возвратов на доработку']>0)&
    (data['Результативность']=='Выполнено')&data['Идентификатор дефекта'].isin(pril4)]['Корневой ИД заявки'])



#Добавление addr_id для джойна со справочником addres_catalog. 
le_a = preprocessing.LabelEncoder()
le_a.fit(data['Адрес проблемы'])
data['addr_id']=le_a.transform(data['Адрес проблемы']) 


#Добавление review_id для джойна со справочником mood_catalog.
data['Отзыв'].fillna('none', inplace=True)
le_r = preprocessing.LabelEncoder()
le_r.fit(data['Отзыв'])
data['review_id']=le_r.transform(data['Отзыв']) 


#Удаление полей
data.drop(['Наименование округа',
'Код округа',
'Наименование района',
'Код района',
'Адрес проблемы',
'УНОМ',
'Отзыв'  ], inplace=True, axis='columns')

#нужна еще обработка

data.to_csv(path_or_buf='Full_16_09_22_processed.csv', sep='$', index=False)